# Generated by Django 3.1.3 on 2020-12-21 16:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ArtistSong',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('collaborator', 'Collaborator'), ('featured', 'Featured')], max_length=64)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_v2.artist')),
            ],
        ),
        migrations.CreateModel(
            name='GeniusArtist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('artist_id', models.CharField(max_length=15, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='GeniusSong',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('lyrics', models.TextField()),
                ('song_id', models.CharField(max_length=15, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compressibility', models.FloatField(null=True)),
                ('artists', models.ManyToManyField(through='app_v2.ArtistSong', to='app_v2.Artist')),
                ('genius_song', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_v2.geniussong')),
            ],
        ),
        migrations.CreateModel(
            name='SpotifyArtist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('artist_id', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SpotifyGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=289)),
                ('pretty_name', models.CharField(max_length=289)),
            ],
        ),
        migrations.CreateModel(
            name='WikidataArtist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('alt_names_serialized', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='WikidataGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wikidata_id', models.CharField(max_length=13, unique=True)),
                ('label', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=289, unique=True)),
                ('popularity_score', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='YoutubeChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('channel_id', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='YoutubeVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_id', models.CharField(max_length=255, unique=True)),
                ('title', models.CharField(max_length=255, null=True)),
                ('view_count', models.BigIntegerField(null=True)),
                ('like_count', models.BigIntegerField(null=True)),
                ('dislike_count', models.BigIntegerField(null=True)),
                ('favorite_count', models.BigIntegerField(null=True)),
                ('comment_count', models.BigIntegerField(null=True)),
                ('default_language', models.CharField(max_length=10, null=True)),
                ('published_at', models.DateTimeField(null=True)),
                ('channel_title', models.CharField(max_length=255, null=True)),
                ('channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_v2.youtubechannel')),
                ('song', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='youtube_videos', to='app_v2.song')),
            ],
        ),
        migrations.CreateModel(
            name='WordSong',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.IntegerField()),
                ('section', models.CharField(max_length=50)),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_v2.song')),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_v2.word')),
            ],
        ),
        migrations.AddField(
            model_name='word',
            name='occurs_in_song',
            field=models.ManyToManyField(through='app_v2.WordSong', to='app_v2.Song'),
        ),
        migrations.CreateModel(
            name='WikidataSong',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('wikidata_id', models.CharField(max_length=13, unique=True)),
                ('genres', models.ManyToManyField(to='app_v2.WikidataGenre')),
                ('performers', models.ManyToManyField(to='app_v2.WikidataArtist')),
            ],
        ),
        migrations.CreateModel(
            name='SpotifySong',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('album_id', models.CharField(max_length=255)),
                ('track_id', models.CharField(max_length=255, unique=True)),
                ('popularity_score', models.IntegerField()),
                ('artists', models.ManyToManyField(to='app_v2.SpotifyArtist')),
                ('genres', models.ManyToManyField(to='app_v2.SpotifyGenre')),
            ],
        ),
        migrations.AddField(
            model_name='song',
            name='spotify_song',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_v2.spotifysong'),
        ),
        migrations.AddField(
            model_name='song',
            name='wikidata_song',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_v2.wikidatasong'),
        ),
        migrations.AddField(
            model_name='artistsong',
            name='song',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_v2.song'),
        ),
        migrations.AddField(
            model_name='artist',
            name='genius_artist',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_v2.geniusartist'),
        ),
        migrations.AddField(
            model_name='artist',
            name='spotify_artist',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_v2.spotifyartist'),
        ),
        migrations.AddField(
            model_name='artist',
            name='wikidata_artist',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_v2.wikidataartist'),
        ),
        migrations.AddField(
            model_name='artist',
            name='youtube_channels',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_v2.youtubechannel'),
        ),
        migrations.AlterUniqueTogether(
            name='artistsong',
            unique_together={('artist', 'song')},
        ),
    ]
