/**
 * Song Lyrics & Popularity (SLAP)
 * This API provides the metrics and the metadata of songs in order to analyze Lyrics & Popularity
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Artist from './model/Artist';
import Genre from './model/Genre';
import HttpError from './model/HttpError';
import InlineResponse200 from './model/InlineResponse200';
import InlineResponse2001 from './model/InlineResponse2001';
import InlineResponse2002 from './model/InlineResponse2002';
import InlineResponse2003 from './model/InlineResponse2003';
import Song from './model/Song';
import SongMetrics from './model/SongMetrics';
import SongMetricsChart from './model/SongMetricsChart';
import SongMetricsRepetition from './model/SongMetricsRepetition';
import SongMetricsRepetitionBow from './model/SongMetricsRepetitionBow';
import DefaultApi from './api/DefaultApi';


/**
* This_API_provides_the_metrics_and_the_metadata_of_songs_in_order_to_analyze_Lyrics__Popularity.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SlapClient = require('index'); // See note below*.
* var xxxSvc = new SlapClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SlapClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SlapClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SlapClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Artist model constructor.
     * @property {module:model/Artist}
     */
    Artist,

    /**
     * The Genre model constructor.
     * @property {module:model/Genre}
     */
    Genre,

    /**
     * The HttpError model constructor.
     * @property {module:model/HttpError}
     */
    HttpError,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001,

    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002,

    /**
     * The InlineResponse2003 model constructor.
     * @property {module:model/InlineResponse2003}
     */
    InlineResponse2003,

    /**
     * The Song model constructor.
     * @property {module:model/Song}
     */
    Song,

    /**
     * The SongMetrics model constructor.
     * @property {module:model/SongMetrics}
     */
    SongMetrics,

    /**
     * The SongMetricsChart model constructor.
     * @property {module:model/SongMetricsChart}
     */
    SongMetricsChart,

    /**
     * The SongMetricsRepetition model constructor.
     * @property {module:model/SongMetricsRepetition}
     */
    SongMetricsRepetition,

    /**
     * The SongMetricsRepetitionBow model constructor.
     * @property {module:model/SongMetricsRepetitionBow}
     */
    SongMetricsRepetitionBow,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
