/**
 * Song Lyrics & Popularity (SLAP)
 * This API provides the metrics and the metadata of songs in order to analyze Lyrics & Popularity
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Song model module.
 * @module model/Song
 * @version 1.0.0
 */
class Song {
    /**
     * Constructs a new <code>Song</code>.
     * @alias module:model/Song
     * @param title {String} 
     * @param lyrics {String} 
     * @param compressibility {Number} 
     * @param spotifyPopularity {Number} 
     */
    constructor(title, lyrics, compressibility, spotifyPopularity) { 
        
        Song.initialize(this, title, lyrics, compressibility, spotifyPopularity);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, title, lyrics, compressibility, spotifyPopularity) { 
        obj['title'] = title;
        obj['lyrics'] = lyrics;
        obj['compressibility'] = compressibility;
        obj['spotify_popularity'] = spotifyPopularity;
    }

    /**
     * Constructs a <code>Song</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Song} obj Optional instance to populate.
     * @return {module:model/Song} The populated <code>Song</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Song();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('artists')) {
                obj['artists'] = ApiClient.convertToType(data['artists'], ['String']);
            }
            if (data.hasOwnProperty('genres')) {
                obj['genres'] = ApiClient.convertToType(data['genres'], ['String']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('lyrics')) {
                obj['lyrics'] = ApiClient.convertToType(data['lyrics'], 'String');
            }
            if (data.hasOwnProperty('compressibility')) {
                obj['compressibility'] = ApiClient.convertToType(data['compressibility'], 'Number');
            }
            if (data.hasOwnProperty('spotify_popularity')) {
                obj['spotify_popularity'] = ApiClient.convertToType(data['spotify_popularity'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
Song.prototype['id'] = undefined;

/**
 * @member {Array.<String>} artists
 */
Song.prototype['artists'] = undefined;

/**
 * @member {Array.<String>} genres
 */
Song.prototype['genres'] = undefined;

/**
 * @member {String} title
 */
Song.prototype['title'] = undefined;

/**
 * @member {String} lyrics
 */
Song.prototype['lyrics'] = undefined;

/**
 * @member {Number} compressibility
 */
Song.prototype['compressibility'] = undefined;

/**
 * @member {Number} spotify_popularity
 */
Song.prototype['spotify_popularity'] = undefined;






export default Song;

