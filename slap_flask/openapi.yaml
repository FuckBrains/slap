# Author name: Tharathorn Bunrattanasathian
# Student ID: 6110546011

openapi: 3.0.0
info:
  title: Song Lyrics & Popularity (SLAP)
  description: This API provides the metrics and the metadata of songs in order to analyze Lyrics & Popularity
# #Template for if we want to put any contacts
#  contact:
#    name: Koo Cook
#    url: https://www.koocook.app/api-support/
#    email: koocook.app@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: /api
paths:
  /song:
    parameters:
      - name: title
        in: query
        description: The title of a song
        required: true
        schema:
          type: string
        example: Begin Again
      - name: artist
        in: query
        description: The artist of a song
        required: true
        schema:
          type: string
        example: Taylor Swift
    get:
      description: Returns a song matching the query
      operationId: slap_flask.public.controllers.songs.get_song
      responses:
        '200':
          description: A list of songs.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Song'
        '404':
          $ref: '#/components/responses/default'

  /song/{song_id}:
    parameters:
      - name: song_id
        in: path
        description: The ID of the song
        required: true
        schema:
          type: string
        example: 12
      - name: for_graph
        in: query
        description: Whether to return additional parameters for making a graph
        required: false
        schema:
          type: boolean
        example: true
    get:
      description: Returns song metrics
      operationId: slap_flask.public.controllers.songs.get_song_by_id
      responses:
        '200':
          description: The metrics of a given song
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SongMetrics'
        '404':
          $ref: '#/components/responses/default'

  /song/{song_id}/metrics:
    parameters:
      - name: song_id
        in: path
        description: The ID of the song
        required: true
        schema:
          type: string
        example: 12
      - name: for_graph
        in: query
        description: Whether to return additional parameters for making a graph
        required: false
        schema:
          type: boolean
        example: true
    get:
      description: Returns song metrics
      operationId: slap_flask.public.controllers.songs.get_song_metrics
      responses:
        '200':
          description: The metrics of a given song
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SongMetrics'
        '404':
          $ref: '#/components/responses/default'

  /song/{song_id}/word_popularity:
    parameters:
      - name: song_id
        in: path
        description: The ID of the song
        required: true
        schema:
          type: string
        example: 12
      - name: word_count_weight
        in: query
        description: The given weight of word count
        required: true
        schema:
          type: number
        example: 12
      - name: popularity_weight
        in: query
        description: The given popularity index of word count
        required: true
        schema:
          type: number
        example: 12
      - name: popularity_indicator
        in: query
        description: The given popularity indicator
        required: false
        schema:
          type: string
        example: youtube_views
    get:
      description: Returns word popularity index
      operationId: slap_flask.public.controllers.songs.get_parameterized_word_popularity_single
      responses:
        '200':
          description: The parameterized word popularity of a given song
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SongMetrics'
        '404':
          $ref: '#/components/responses/default'

  /song/genres:
    get:
      description: Returns all genres
      operationId: slap_flask.public.controllers.songs.get_song_genres
      responses:
        '200':
          description: A list of genres.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Genre'
        '404':
          $ref: '#/components/responses/default'

components:
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
    Song:
      type: object
      properties:
        song_id:
          type: string
        title:
          type: string
        artists:
          type: array
          items:
            $ref: '#/components/schemas/Artist'
        lyrics:
          type: string
        genres:
          type: array
          items:
            type: string
    Artist:
      type: object
      properties:
        name:
          type: string
    SongMetrics:
      type: object
      properties:
        repetition:
          type: object
          properties:
            bow:
              type: object
              properties:
                frequencies:
                  type: array
                  items:
                    type: integer
                words:
                  type: array
                  items:
                    type: string
                ranks:
                  type: array
                  items:
                    type: integer
        chart:
          type: object
          properties:
            library:
              type: string
            type:
              type: string
    Genre:
      type: object
      properties:
        name:
          type: string
        genre_id:
          type: string
  responses:
# Just to test out responses object
    default:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
